# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2019, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# oon arfiandwi <oon.arfiandwi@gmail.com>, 2019
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-09-01 14:24+0000\n"
"PO-Revision-Date: 2017-02-16 23:39+0000\n"
"Last-Translator: oon arfiandwi <oon.arfiandwi@gmail.com>, 2019\n"
"Language-Team: Indonesian (https://www.transifex.com/python-doc/teams/5390/id/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: id\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../tutorial/appendix.rst:5
msgid "Appendix"
msgstr "Lampiran"

#: ../../tutorial/appendix.rst:11
msgid "Interactive Mode"
msgstr "Mode Interaktif"

#: ../../tutorial/appendix.rst:16
msgid "Error Handling"
msgstr "Penanganan Kesalahan"

#: ../../tutorial/appendix.rst:18
msgid ""
"When an error occurs, the interpreter prints an error message and a stack "
"trace. In interactive mode, it then returns to the primary prompt; when "
"input came from a file, it exits with a nonzero exit status after printing "
"the stack trace. (Exceptions handled by an :keyword:`except` clause in a "
":keyword:`try` statement are not errors in this context.)  Some errors are "
"unconditionally fatal and cause an exit with a nonzero exit; this applies to"
" internal inconsistencies and some cases of running out of memory.  All "
"error messages are written to the standard error stream; normal output from "
"executed commands is written to standard output."
msgstr ""
"Ketika terjadi kesalahan, interpreter mencetak pesan kesalahan dan tumpukan "
"jejak. Dalam mode interaktif, kemudian kembali ke prompt utama; ketika "
"masukan datang dari berkas, akan keluar dengan status keluar yang tidak nol "
"setelah mencetak tumpukan jejak. (Pengecualian yang ditangani oleh klausa "
":keyword:`exception` dalam pernyataan :keyword:` try` bukan kesalahan dalam "
"konteks ini.) Beberapa kesalahan berakibat fatal dan menyebabkan keluar "
"dengan kode keluar selain-nol; ini berlaku untuk inkonsistensi internal dan "
"beberapa kasus kehabisan memori. Semua pesan kesalahan ditulis ke aliran "
"standar kesalahan; keluaran normal dari perintah yang dieksekusi ditulis ke "
"standar keluaran."

#: ../../tutorial/appendix.rst:28
msgid ""
"Typing the interrupt character (usually :kbd:`Control-C` or :kbd:`Delete`) "
"to the primary or secondary prompt cancels the input and returns to the "
"primary prompt. [#]_ Typing an interrupt while a command is executing raises"
" the :exc:`KeyboardInterrupt` exception, which may be handled by a "
":keyword:`try` statement."
msgstr ""
"Mengetik karakter interupsi (biasanya :kbd:`Control-C` atau :kbd:`Delete`) "
"ke prompt utama atau sekunder membatalkan masukan dan kembali ke prompt "
"utama. [#]_ Mengetik interupsi saat sebuah perintah dieksekusi memunculkan "
"pengecualian :exc:`KeyboardInterrupt`, yang dapat ditangani oleh pernyataan "
":keyword:` try`."

#: ../../tutorial/appendix.rst:38
msgid "Executable Python Scripts"
msgstr "Skrip Python Yang Dapat Dieksekusi"

#: ../../tutorial/appendix.rst:40
msgid ""
"On BSD'ish Unix systems, Python scripts can be made directly executable, "
"like shell scripts, by putting the line ::"
msgstr ""
"Pada sistem Unix BSD'ish, skrip Python dapat dibuat langsung dapat "
"dieksekusi, seperti skrip shell, dengan meletakkan baris ::"

#: ../../tutorial/appendix.rst:45
msgid ""
"(assuming that the interpreter is on the user's :envvar:`PATH`) at the "
"beginning of the script and giving the file an executable mode.  The ``#!`` "
"must be the first two characters of the file.  On some platforms, this first"
" line must end with a Unix-style line ending (``'\\n'``), not a Windows "
"(``'\\r\\n'``) line ending.  Note that the hash, or pound, character, "
"``'#'``, is used to start a comment in Python."
msgstr ""
"(dengan asumsi bahwa interpreter ada di :envvar:`PATH` pengguna) di awal "
"skrip dan memberikan mode pada berkas untuk dapat dieksekusi. ``#!`` Harus "
"merupakan dua karakter pertama dari file tersebut. Pada beberapa platform, "
"baris pertama ini harus diakhiri dengan akhiran bergaya Unix (``'\\n'``), "
"bukan akhiran Windows (``'\\r\\n'``). Perhatikan bahwa hash, atau pon, "
"karakter, ``'#'``, digunakan untuk memulai komentar dengan Python."

#: ../../tutorial/appendix.rst:52
msgid ""
"The script can be given an executable mode, or permission, using the "
":program:`chmod` command."
msgstr ""
"Skrip bisa diberikan mode yang dapat dieksekusi, atau izin, menggunakan "
"perintah :program:`chmod`."

#: ../../tutorial/appendix.rst:59
msgid ""
"On Windows systems, there is no notion of an \"executable mode\".  The "
"Python installer automatically associates ``.py`` files with ``python.exe`` "
"so that a double-click on a Python file will run it as a script.  The "
"extension can also be ``.pyw``, in that case, the console window that "
"normally appears is suppressed."
msgstr ""
"Pada sistem Windows, tidak ada gagasan tentang \"mode yang dapat "
"dieksekusi\". Pemasang Python secara otomatis mengaitkan file ``.py`` dengan"
" ``python.exe`` sehingga klik dua kali pada file Python akan menjalankannya "
"sebagai skrip. Ekstensi juga bisa ``.pyw``, dalam hal ini, jendela konsol "
"yang biasanya muncul dihilangkan."

#: ../../tutorial/appendix.rst:69
msgid "The Interactive Startup File"
msgstr "Berkas Permulaan Interaktif"

#: ../../tutorial/appendix.rst:71
msgid ""
"When you use Python interactively, it is frequently handy to have some "
"standard commands executed every time the interpreter is started.  You can "
"do this by setting an environment variable named :envvar:`PYTHONSTARTUP` to "
"the name of a file containing your start-up commands.  This is similar to "
"the :file:`.profile` feature of the Unix shells."
msgstr ""
"Ketika Anda menggunakan Python secara interaktif, seringkali berguna untuk "
"menjalankan beberapa perintah standar setiap kali interpreter dimulai. Anda "
"dapat melakukan ini dengan mengatur variabel lingkungan bernama "
":envvar:`PYTHONSTARTUP` ke nama berkas yang berisi perintah permulaan Anda. "
"Ini mirip dengan fitur :file:`.profile` dari shell Unix."

#: ../../tutorial/appendix.rst:77
msgid ""
"This file is only read in interactive sessions, not when Python reads "
"commands from a script, and not when :file:`/dev/tty` is given as the "
"explicit source of commands (which otherwise behaves like an interactive "
"session).  It is executed in the same namespace where interactive commands "
"are executed, so that objects that it defines or imports can be used without"
" qualification in the interactive session. You can also change the prompts "
"``sys.ps1`` and ``sys.ps2`` in this file."
msgstr ""
"File ini hanya dibaca dalam sesi interaktif, bukan ketika Python membaca "
"perintah dari skrip, dan bukan ketika :file:`/dev/tty` diberikan sebagai "
"sumber perintah eksplisit (yang jika tidak berperilaku seperti sesi "
"interaktif). Itu dieksekusi di namespace yang sama di mana perintah "
"interaktif dieksekusi, sehingga objek yang didefinisikan atau impor dapat "
"digunakan tanpa kualifikasi dalam sesi interaktif. Anda juga dapat mengubah "
"prompt ``sys.ps1`` dan ``sys.ps2`` dalam file ini."

#: ../../tutorial/appendix.rst:85
msgid ""
"If you want to read an additional start-up file from the current directory, "
"you can program this in the global start-up file using code like ``if "
"os.path.isfile('.pythonrc.py'): exec(open('.pythonrc.py').read())``. If you "
"want to use the startup file in a script, you must do this explicitly in the"
" script::"
msgstr ""
"Jika Anda ingin membaca berkas permulaan tambahan dari direktori saat ini, "
"Anda dapat memrogram ini dalam berkas permulaan global menggunakan kode "
"seperti ``if os.path.isfile('.pythonrc.py'): "
"exec(open('.pythonrc.py').read())``. Jika Anda ingin menggunakan berkas "
"permulaan dalam skrip, Anda harus melakukan ini secara eksplisit dalam "
"skrip::"

#: ../../tutorial/appendix.rst:102
msgid "The Customization Modules"
msgstr "Modul Ubahsuaian"

#: ../../tutorial/appendix.rst:104
msgid ""
"Python provides two hooks to let you customize it: :mod:`sitecustomize` and "
":mod:`usercustomize`.  To see how it works, you need first to find the "
"location of your user site-packages directory.  Start Python and run this "
"code::"
msgstr ""
"Python menyediakan dua kait untuk memungkinkan Anda menyesuaikannya: "
":mod:`sitecustomize` dan :mod:`usercustomize`. Untuk melihat cara kerjanya, "
"Anda harus terlebih dahulu menemukan lokasi direktori site-packages pengguna"
" Anda. Mulai Python dan operasikan kode ini::"

#: ../../tutorial/appendix.rst:112
msgid ""
"Now you can create a file named :file:`usercustomize.py` in that directory "
"and put anything you want in it.  It will affect every invocation of Python,"
" unless it is started with the :option:`-s` option to disable the automatic "
"import."
msgstr ""
"Sekarang Anda dapat membuat file bernama :file:`usercustomize.py` di "
"direktori itu dan memasukkan apa pun yang Anda inginkan di dalamnya. Ini "
"akan memengaruhi setiap seruan dari Python, kecuali dimulai dengan opsi "
":option:`-s` untuk menonaktifkan impor otomatis."

#: ../../tutorial/appendix.rst:116
msgid ""
":mod:`sitecustomize` works in the same way, but is typically created by an "
"administrator of the computer in the global site-packages directory, and is "
"imported before :mod:`usercustomize`.  See the documentation of the "
":mod:`site` module for more details."
msgstr ""
":mod:`sitecustomize` bekerja dengan cara yang sama, tetapi biasanya dibuat "
"oleh administrator komputer di direktori site-packages global, dan diimpor "
"sebelum :mod:`usercustomize`. Lihat dokumentasi modul :mod:`site` untuk "
"lebih jelasnya."

#: ../../tutorial/appendix.rst:123
msgid "Footnotes"
msgstr "Catatan kaki"

#: ../../tutorial/appendix.rst:124
msgid "A problem with the GNU Readline package may prevent this."
msgstr "Masalah dengan paket GNU Readline dapat mencegah hal ini."
