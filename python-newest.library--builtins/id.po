# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2019, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# oon arfiandwi <oon.arfiandwi@gmail.com>, 2018
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-09-01 14:24+0000\n"
"PO-Revision-Date: 2017-02-16 19:36+0000\n"
"Last-Translator: oon arfiandwi <oon.arfiandwi@gmail.com>, 2018\n"
"Language-Team: Indonesian (https://www.transifex.com/python-doc/teams/5390/id/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: id\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/builtins.rst:2
msgid ":mod:`builtins` --- Built-in objects"
msgstr ":mod:`builtins` --- Objek-objek bawaan"

#: ../../library/builtins.rst:9
msgid ""
"This module provides direct access to all 'built-in' identifiers of Python; "
"for example, ``builtins.open`` is the full name for the built-in function "
":func:`open`.  See :ref:`built-in-funcs` and :ref:`built-in-consts` for "
"documentation."
msgstr ""
"Modul ini menyediakan akses langsung ke semua pengidentifikasi 'bawaan' dari"
" Python; misalnya, ``builtins.open`` adalah nama lengkap untuk fungsi bawaan"
" :func:`open`. Lihat :ref:`built-in-funcs` dan :ref:`built-in-consts` untuk "
"dokumentasi."

#: ../../library/builtins.rst:15
msgid ""
"This module is not normally accessed explicitly by most applications, but "
"can be useful in modules that provide objects with the same name as a built-"
"in value, but in which the built-in of that name is also needed.  For "
"example, in a module that wants to implement an :func:`open` function that "
"wraps the built-in :func:`open`, this module can be used directly::"
msgstr ""
"Modul ini biasanya tidak diakses secara eksplisit oleh sebagian besar "
"aplikasi, tetapi dapat berguna dalam modul yang menyediakan objek dengan "
"nama yang sama dengan nilai bawaan, tetapi di dalamnya bawaan dari nama itu "
"juga diperlukan. Sebagai contoh, dalam modul yang ingin mengimplementasikan "
"fungsi :func:`open` yang membungkus bawaan :func:`open`, modul ini dapat "
"digunakan secara langsung::"

#: ../../library/builtins.rst:38
msgid ""
"As an implementation detail, most modules have the name ``__builtins__`` "
"made available as part of their globals.  The value of ``__builtins__`` is "
"normally either this module or the value of this module's "
":attr:`~object.__dict__` attribute. Since this is an implementation detail, "
"it may not be used by alternate implementations of Python."
msgstr ""
"Sebagai detil implementasi, sebagian besar modul memiliki nama "
"``__builtins__`` yang tersedia sebagai bagian dari globalnya. Nilai "
"``__builtins__`` biasanya berupa modul ini atau nilai dari modul ini atribut"
" :attr:`~object .__ dict__`. Karena ini merupakan detil implementasi, ini "
"mungkin tidak digunakan oleh implementasi alternatif Python."
