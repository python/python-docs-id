# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Andika Chandra <Androganteng432@gmail.com>, 2021
# Ahmad Mustafid, 2024
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-25 14:19+0000\n"
"PO-Revision-Date: 2021-06-28 00:49+0000\n"
"Last-Translator: Ahmad Mustafid, 2024\n"
"Language-Team: Indonesian (https://app.transifex.com/python-doc/teams/5390/id/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: id\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../c-api/mapping.rst:6
msgid "Mapping Protocol"
msgstr "Protokol Pemetaan"

#: ../../c-api/mapping.rst:8
msgid ""
"See also :c:func:`PyObject_GetItem`, :c:func:`PyObject_SetItem` and "
":c:func:`PyObject_DelItem`."
msgstr ""
"Lihat juga  :c:func:`PyObject_GetItem`, :c:func:`PyObject_SetItem` dan "
":c:func:`PyObject_DelItem`."

#: ../../c-api/mapping.rst:14
msgid ""
"Return ``1`` if the object provides the mapping protocol or supports "
"slicing, and ``0`` otherwise.  Note that it returns ``1`` for Python classes"
" with a :meth:`~object.__getitem__` method, since in general it is "
"impossible to determine what type of keys the class supports. This function "
"always succeeds."
msgstr ""

#: ../../c-api/mapping.rst:25
msgid ""
"Returns the number of keys in object *o* on success, and ``-1`` on failure. "
"This is equivalent to the Python expression ``len(o)``."
msgstr ""

#: ../../c-api/mapping.rst:31
msgid ""
"This is the same as :c:func:`PyObject_GetItem`, but *key* is specified as a "
":c:expr:`const char*` UTF-8 encoded bytes string, rather than a "
":c:expr:`PyObject*`."
msgstr ""

#: ../../c-api/mapping.rst:38
msgid ""
"Variant of :c:func:`PyObject_GetItem` which doesn't raise :exc:`KeyError` if"
" the key is not found."
msgstr ""

#: ../../c-api/mapping.rst:41
msgid ""
"If the key is found, return ``1`` and set *\\*result* to a new :term:`strong"
" reference` to the corresponding value. If the key is not found, return "
"``0`` and set *\\*result* to ``NULL``; the :exc:`KeyError` is silenced. If "
"an error other than :exc:`KeyError` is raised, return ``-1`` and set "
"*\\*result* to ``NULL``."
msgstr ""

#: ../../c-api/mapping.rst:53
msgid ""
"This is the same as :c:func:`PyMapping_GetOptionalItem`, but *key* is "
"specified as a :c:expr:`const char*` UTF-8 encoded bytes string, rather than"
" a :c:expr:`PyObject*`."
msgstr ""

#: ../../c-api/mapping.rst:62
msgid ""
"This is the same as :c:func:`PyObject_SetItem`, but *key* is specified as a "
":c:expr:`const char*` UTF-8 encoded bytes string, rather than a "
":c:expr:`PyObject*`."
msgstr ""

#: ../../c-api/mapping.rst:69
msgid "This is an alias of :c:func:`PyObject_DelItem`."
msgstr ""

#: ../../c-api/mapping.rst:74
msgid ""
"This is the same as :c:func:`PyObject_DelItem`, but *key* is specified as a "
":c:expr:`const char*` UTF-8 encoded bytes string, rather than a "
":c:expr:`PyObject*`."
msgstr ""

#: ../../c-api/mapping.rst:81
msgid ""
"Return ``1`` if the mapping object has the key *key* and ``0`` otherwise. "
"This is equivalent to the Python expression ``key in o``. On failure, return"
" ``-1``."
msgstr ""

#: ../../c-api/mapping.rst:90
msgid ""
"This is the same as :c:func:`PyMapping_HasKeyWithError`, but *key* is "
"specified as a :c:expr:`const char*` UTF-8 encoded bytes string, rather than"
" a :c:expr:`PyObject*`."
msgstr ""

#: ../../c-api/mapping.rst:99
msgid ""
"Return ``1`` if the mapping object has the key *key* and ``0`` otherwise. "
"This is equivalent to the Python expression ``key in o``. This function "
"always succeeds."
msgstr ""

#: ../../c-api/mapping.rst:105
msgid ""
"Exceptions which occur when this calls :meth:`~object.__getitem__` method "
"are silently ignored. For proper error handling, use "
":c:func:`PyMapping_HasKeyWithError`, :c:func:`PyMapping_GetOptionalItem` or "
":c:func:`PyObject_GetItem()` instead."
msgstr ""

#: ../../c-api/mapping.rst:113
msgid ""
"This is the same as :c:func:`PyMapping_HasKey`, but *key* is specified as a "
":c:expr:`const char*` UTF-8 encoded bytes string, rather than a "
":c:expr:`PyObject*`."
msgstr ""

#: ../../c-api/mapping.rst:119
msgid ""
"Exceptions that occur when this calls :meth:`~object.__getitem__` method or "
"while creating the temporary :class:`str` object are silently ignored. For "
"proper error handling, use :c:func:`PyMapping_HasKeyStringWithError`, "
":c:func:`PyMapping_GetOptionalItemString` or "
":c:func:`PyMapping_GetItemString` instead."
msgstr ""

#: ../../c-api/mapping.rst:129
msgid ""
"On success, return a list of the keys in object *o*.  On failure, return "
"``NULL``."
msgstr ""

#: ../../c-api/mapping.rst:132 ../../c-api/mapping.rst:141
#: ../../c-api/mapping.rst:150
msgid "Previously, the function returned a list or a tuple."
msgstr ""

#: ../../c-api/mapping.rst:138
msgid ""
"On success, return a list of the values in object *o*.  On failure, return "
"``NULL``."
msgstr ""

#: ../../c-api/mapping.rst:147
msgid ""
"On success, return a list of the items in object *o*, where each item is a "
"tuple containing a key-value pair.  On failure, return ``NULL``."
msgstr ""

#: ../../c-api/mapping.rst:23
msgid "built-in function"
msgstr "fungsi bawaan"

#: ../../c-api/mapping.rst:23
msgid "len"
msgstr ""
