# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Faiq Zakki <221709674@stis.ac.id>, 2021
# oon arfiandwi <oon.arfiandwi@gmail.com>, 2023
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-05-02 14:19+0000\n"
"PO-Revision-Date: 2021-06-28 01:03+0000\n"
"Last-Translator: oon arfiandwi <oon.arfiandwi@gmail.com>, 2023\n"
"Language-Team: Indonesian (https://app.transifex.com/python-doc/teams/5390/id/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: id\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/copy.rst:2
msgid ":mod:`!copy` --- Shallow and deep copy operations"
msgstr ""

#: ../../library/copy.rst:7
msgid "**Source code:** :source:`Lib/copy.py`"
msgstr "**Kode sumber:** :source:`Lib/copy.py`"

#: ../../library/copy.rst:11
msgid ""
"Assignment statements in Python do not copy objects, they create bindings "
"between a target and an object. For collections that are mutable or contain "
"mutable items, a copy is sometimes needed so one can change one copy without"
" changing the other. This module provides generic shallow and deep copy "
"operations (explained below)."
msgstr ""
"Pernyataan penetapan dalam Python tidak menyalin objek, mereka membuat "
"ikatan antara target dengan sebuah objek. Untuk collections yang dapat "
"diubah atau memiliki item-item yang dapat diubah, sebuah penyalinan "
"terkadang dibutuhkan sehingga seseorang dapat mengubah salinan tanpa "
"mengubah yang lainnya. Modul ini menyediakan operasi salinan dangkal dan "
"salinan dalam (dijelaskan dibawah ini)."

#: ../../library/copy.rst:18
msgid "Interface summary:"
msgstr "Ringkasan antarmuka:"

#: ../../library/copy.rst:22
msgid "Return a shallow copy of *obj*."
msgstr ""

#: ../../library/copy.rst:27
msgid "Return a deep copy of *obj*."
msgstr ""

#: ../../library/copy.rst:32
msgid ""
"Creates a new object of the same type as *obj*, replacing fields with values"
" from *changes*."
msgstr ""

#: ../../library/copy.rst:40
msgid "Raised for module specific errors."
msgstr "Di angkat untuk error spesifik dari modul."

#: ../../library/copy.rst:44
msgid ""
"The difference between shallow and deep copying is only relevant for "
"compound objects (objects that contain other objects, like lists or class "
"instances):"
msgstr ""
"Perbedaan antara shallow copy dan deep copy hanya relevan untuk objek "
"majemuk (objek yang berisi objek lainnya, seperti list atau kelas):"

#: ../../library/copy.rst:47
msgid ""
"A *shallow copy* constructs a new compound object and then (to the extent "
"possible) inserts *references* into it to the objects found in the original."
msgstr ""
"Sebuah *shallow copy* membangun sebuah objek majemuk baru dan kemudian "
"(sejauh mungkin) menyisipkan *referensi* ke dalamnya ke objek yang ditemukan"
" di aslinya."

#: ../../library/copy.rst:50
msgid ""
"A *deep copy* constructs a new compound object and then, recursively, "
"inserts *copies* into it of the objects found in the original."
msgstr ""
"Sebuah *deep copy* membangun objek majemuk baruk dan kemudian, secara "
"rekursif, menyisipkan *salinan* ke dalamnya ke objek yang ditemukan di "
"aslinya."

#: ../../library/copy.rst:53
msgid ""
"Two problems often exist with deep copy operations that don't exist with "
"shallow copy operations:"
msgstr ""
"Dua masalah yang sering muncul pada operasi deep copy yang tidak muncul pada"
" operasi shallow copy:"

#: ../../library/copy.rst:56
msgid ""
"Recursive objects (compound objects that, directly or indirectly, contain a "
"reference to themselves) may cause a recursive loop."
msgstr ""
"Objek rekursif (objek majemuk yang secara langsung atau tidak langsung "
"berisi sebuah referensi ke dirinya sendiri) mungkin menyebabkan sebuah "
"perulangan rekursif."

#: ../../library/copy.rst:59
msgid ""
"Because deep copy copies everything it may copy too much, such as data which"
" is intended to be shared between copies."
msgstr ""
"Karena deep copy menyalin segalanya sehingga mungkin menyalin terlalu "
"banyak, seperti data yang dimaksudkan untuk dibagikan kepada salinan lain."

#: ../../library/copy.rst:62
msgid "The :func:`deepcopy` function avoids these problems by:"
msgstr "Fungsi :func:`deepcopy` menghindari masalah diatas dengan:"

#: ../../library/copy.rst:64
msgid ""
"keeping a ``memo`` dictionary of objects already copied during the current "
"copying pass; and"
msgstr ""
"menyimpan sebuah ``memo`` kamus dari objek yang sudah disalin selama "
"penyalinan saat ini; dan"

#: ../../library/copy.rst:67
msgid ""
"letting user-defined classes override the copying operation or the set of "
"components copied."
msgstr ""
"membiarkan kelas-kelas yang didefinisikan oleh user menimpa operasi "
"penyalinan atau kumpulan komponen yang disalin."

#: ../../library/copy.rst:70
msgid ""
"This module does not copy types like module, method, stack trace, stack "
"frame, file, socket, window, or any similar types.  It does \"copy\" "
"functions and classes (shallow and deeply), by returning the original object"
" unchanged; this is compatible with the way these are treated by the "
":mod:`pickle` module."
msgstr ""

#: ../../library/copy.rst:75
msgid ""
"Shallow copies of dictionaries can be made using :meth:`dict.copy`, and of "
"lists by assigning a slice of the entire list, for example, ``copied_list = "
"original_list[:]``."
msgstr ""
"Salinan dangkal dari kamus dapat di buat menggunakan :meth:`dict.copy`, dan "
"list dengan menetapkan potongan dari keseluruhan list, sebagai contoh, "
"``copied_list = original_list[:]``."

#: ../../library/copy.rst:81
msgid ""
"Classes can use the same interfaces to control copying that they use to "
"control pickling.  See the description of module :mod:`pickle` for "
"information on these methods.  In fact, the :mod:`copy` module uses the "
"registered pickle functions from the :mod:`copyreg` module."
msgstr ""
"Kelas-kelas dapat menggunakan antarmuka yang sama untuk mengontrol "
"penyalinan yang mereka gunakan untuk mengontrol pengawetan. Lihat deskripsi "
"dari modul :mod:`pickle` untuk informasi dari metode ini. Faktanya, modul "
":mod:`copy` menggunakan fungsi pengawetan yang terdaftar dari modul "
":mod:`copyreg`."

#: ../../library/copy.rst:92
msgid ""
"In order for a class to define its own copy implementation, it can define "
"special methods :meth:`~object.__copy__` and :meth:`~object.__deepcopy__`."
msgstr ""

#: ../../library/copy.rst:98
msgid ""
"Called to implement the shallow copy operation; no additional arguments are "
"passed."
msgstr ""

#: ../../library/copy.rst:104
msgid ""
"Called to implement the deep copy operation; it is passed one argument, the "
"*memo* dictionary.  If the ``__deepcopy__`` implementation needs to make a "
"deep copy of a component, it should call the :func:`~copy.deepcopy` function"
" with the component as first argument and the *memo* dictionary as second "
"argument. The *memo* dictionary should be treated as an opaque object."
msgstr ""

#: ../../library/copy.rst:114
msgid ""
"Function :func:`!copy.replace` is more limited than :func:`~copy.copy` and "
":func:`~copy.deepcopy`, and only supports named tuples created by "
":func:`~collections.namedtuple`, :mod:`dataclasses`, and other classes which"
" define method :meth:`~object.__replace__`."
msgstr ""

#: ../../library/copy.rst:122
msgid ""
"This method should create a new object of the same type, replacing fields "
"with values from *changes*."
msgstr ""

#: ../../library/copy.rst:128
msgid "Module :mod:`pickle`"
msgstr "Modul :mod:`pickle`"

#: ../../library/copy.rst:129
msgid ""
"Discussion of the special methods used to support object state retrieval and"
" restoration."
msgstr ""
"Diskusi tentang metode khusus yang digunakan untuk mendukung pengambilan dan"
" pemulihan status objek."

#: ../../library/copy.rst:79
msgid "module"
msgstr "modul"

#: ../../library/copy.rst:79
msgid "pickle"
msgstr "pickle"

#: ../../library/copy.rst:86
msgid "__copy__() (copy protocol)"
msgstr ""

#: ../../library/copy.rst:86
msgid "__deepcopy__() (copy protocol)"
msgstr ""

#: ../../library/copy.rst:111
msgid "__replace__() (replace protocol)"
msgstr ""
