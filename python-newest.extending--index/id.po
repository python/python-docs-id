# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2019, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# oon arfiandwi <oon.arfiandwi@gmail.com>, 2019
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-09-01 14:24+0000\n"
"PO-Revision-Date: 2017-02-16 17:42+0000\n"
"Last-Translator: oon arfiandwi <oon.arfiandwi@gmail.com>, 2019\n"
"Language-Team: Indonesian (https://www.transifex.com/python-doc/teams/5390/id/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: id\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../extending/index.rst:5
msgid "Extending and Embedding the Python Interpreter"
msgstr "Memperluas dan Menggabungkan Interpreter Python"

#: ../../extending/index.rst:7
msgid ""
"This document describes how to write modules in C or C++ to extend the "
"Python interpreter with new modules.  Those modules can not only define new "
"functions but also new object types and their methods.  The document also "
"describes how to embed the Python interpreter in another application, for "
"use as an extension language.  Finally, it shows how to compile and link "
"extension modules so that they can be loaded dynamically (at run time) into "
"the interpreter, if the underlying operating system supports this feature."
msgstr ""
"Dokumen ini menjelaskan cara menulis modul dalam C atau C++ untuk memperluas"
" interpreter Python dengan modul baru. Modul-modul itu tidak hanya dapat "
"mendefinisikan fungsi baru tetapi juga jenis objek baru dan metode mereka. "
"Dokumen ini juga menjelaskan cara menanamkan interpreter Python di aplikasi "
"lain, untuk digunakan sebagai ekstensi bahasa. Akhirnya, ini menunjukkan "
"bagaimana mengkompilasi dan menautkan modul ekstensi sehingga mereka dapat "
"dimuat secara dinamis (pada saat *run time*) ke dalam interpreter, jika "
"sistem operasi yang mendasarinya mendukung fitur ini."

#: ../../extending/index.rst:15
msgid ""
"This document assumes basic knowledge about Python.  For an informal "
"introduction to the language, see :ref:`tutorial-index`.  :ref:`reference-"
"index` gives a more formal definition of the language.  :ref:`library-index`"
" documents the existing object types, functions and modules (both built-in "
"and written in Python) that give the language its wide application range."
msgstr ""
"Dokumen ini mengasumsikan pengetahuan dasar tentang Python. Untuk pengantar "
"informal ke bahasa, lihat :ref:`tutorial-index`. :ref:`reference-index` "
"memberikan definisi bahasa yang lebih formal. :ref:`library-index` "
"mendokumentasikan jenis objek, fungsi, dan modul yang ada (baik bawaan dan "
"ditulis dengan Python) yang memberikan rentang penggunaan aplikasi yang luas"
" terhadap bahasa tersebut."

#: ../../extending/index.rst:21
msgid ""
"For a detailed description of the whole Python/C API, see the separate "
":ref:`c-api-index`."
msgstr ""
"Untuk deskripsi terperinci dari keseluruhan API Python/C, lihat bagian "
"terpisah :ref:`c-api-index`."

#: ../../extending/index.rst:26
msgid "Recommended third party tools"
msgstr "Alat pihak ketiga yang direkomendasikan"

#: ../../extending/index.rst:28
msgid ""
"This guide only covers the basic tools for creating extensions provided as "
"part of this version of CPython. Third party tools like `Cython "
"<http://cython.org/>`_, `cffi <https://cffi.readthedocs.io>`_, `SWIG "
"<http://www.swig.org>`_ and `Numba <https://numba.pydata.org/>`_ offer both "
"simpler and more sophisticated approaches to creating C and C++ extensions "
"for Python."
msgstr ""
"Panduan ini hanya mencakup alat dasar untuk membuat ekstensi yang disediakan"
" sebagai bagian dari versi CPython ini. Alat pihak ketiga seperti `Cython "
"<http://cython.org/>`_, `cffi <https://cffi.readthedocs.io>`_, `SWIG "
"<http://www.swig.org>`_ dan `Numba <https://numba.pydata.org/>`_ menawarkan "
"pendekatan yang lebih sederhana dan lebih canggih untuk membuat ekstensi C "
"dan C++ untuk Python."

#: ../../extending/index.rst:40
msgid ""
"`Python Packaging User Guide: Binary Extensions "
"<https://packaging.python.org/guides/packaging-binary-extensions/>`_"
msgstr ""
"`Panduan Pengguna Pengemasan Python: Ekstensi Biner "
"<https://packaging.python.org/guides/packaging-binary-extensions/>`_"

#: ../../extending/index.rst:38
msgid ""
"The Python Packaging User Guide not only covers several available tools that"
" simplify the creation of binary extensions, but also discusses the various "
"reasons why creating an extension module may be desirable in the first "
"place."
msgstr ""
"Panduan Pengguna Pengemasan Python tidak hanya mencakup beberapa alat yang "
"tersedia yang menyederhanakan pembuatan ekstensi biner, tetapi juga membahas"
" berbagai alasan mengapa membuat modul ekstensi mungkin diinginkan di awal."

#: ../../extending/index.rst:45
msgid "Creating extensions without third party tools"
msgstr "Membuat ekstensi tanpa alat pihak ketiga"

#: ../../extending/index.rst:47
msgid ""
"This section of the guide covers creating C and C++ extensions without "
"assistance from third party tools. It is intended primarily for creators of "
"those tools, rather than being a recommended way to create your own C "
"extensions."
msgstr ""
"Bagian panduan ini mencakup pembuatan ekstensi C dan C++ tanpa bantuan dari "
"alat pihak ketiga. Ini dimaksudkan terutama untuk pembuat alat-alat itu, "
"daripada menjadi cara yang disarankan untuk membuat ekstensi C Anda sendiri."

#: ../../extending/index.rst:63
msgid "Embedding the CPython runtime in a larger application"
msgstr "Menggabungkan runtime CPython di aplikasi yang lebih besar"

#: ../../extending/index.rst:65
msgid ""
"Sometimes, rather than creating an extension that runs inside the Python "
"interpreter as the main application, it is desirable to instead embed the "
"CPython runtime inside a larger application. This section covers some of the"
" details involved in doing that successfully."
msgstr ""
"Terkadang, alih-alih membuat ekstensi yang berjalan di dalam interpreter "
"Python sebagai aplikasi utama, lebih baik menanamkan runtime CPython di "
"dalam aplikasi yang lebih besar. Bagian ini mencakup beberapa detail yang "
"terlibat dalam melakukan hal itu dengan sukses."
