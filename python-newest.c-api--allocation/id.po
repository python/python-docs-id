# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# oon arfiandwi <oon.arfiandwi@gmail.com>, 2021
# Akhmat Safrudin <somat@artikulpi.com>, 2021
# Helen Febriani <helenfy.72@gmail.com>, 2021
# Nurul Eka Fitriany Hilal <nurulekafitriany@gmail.com>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-05-09 14:19+0000\n"
"PO-Revision-Date: 2021-06-28 00:47+0000\n"
"Last-Translator: Nurul Eka Fitriany Hilal <nurulekafitriany@gmail.com>, 2021\n"
"Language-Team: Indonesian (https://app.transifex.com/python-doc/teams/5390/id/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: id\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../c-api/allocation.rst:6
msgid "Allocating Objects on the Heap"
msgstr "Mengalokasikan objek kedalam struktur data (heap)"

#: ../../c-api/allocation.rst:17
msgid ""
"Initialize a newly allocated object *op* with its type and initial "
"reference.  Returns the initialized object.  Other fields of the object are "
"not affected."
msgstr ""

#: ../../c-api/allocation.rst:24
msgid ""
"This does everything :c:func:`PyObject_Init` does, and also initializes the "
"length information for a variable-size object."
msgstr ""
"Ini melakukan segalanya :c:func:`PyObject_Init`, dan juga menginisialiasi "
"panjang informasi pada sebuah ukuran object variabel."

#: ../../c-api/allocation.rst:30
msgid ""
"Allocate a new Python object using the C structure type *TYPE* and the "
"Python type object *typeobj* (``PyTypeObject*``). Fields not defined by the "
"Python object header are not initialized. The caller will own the only "
"reference to the object (i.e. its reference count will be one). The size of "
"the memory allocation is determined from the "
":c:member:`~PyTypeObject.tp_basicsize` field of the type object."
msgstr ""

#: ../../c-api/allocation.rst:38
msgid ""
"Note that this function is unsuitable if *typeobj* has "
":c:macro:`Py_TPFLAGS_HAVE_GC` set. For such objects, use "
":c:func:`PyObject_GC_New` instead."
msgstr ""

#: ../../c-api/allocation.rst:45
msgid ""
"Allocate a new Python object using the C structure type *TYPE* and the "
"Python type object *typeobj* (``PyTypeObject*``). Fields not defined by the "
"Python object header are not initialized.  The allocated memory allows for "
"the *TYPE* structure plus *size* (``Py_ssize_t``) fields of the size given "
"by the :c:member:`~PyTypeObject.tp_itemsize` field of *typeobj*.  This is "
"useful for implementing objects like tuples, which are able to determine "
"their size at construction time.  Embedding the array of fields into the "
"same allocation decreases the number of allocations, improving the memory "
"management efficiency."
msgstr ""

#: ../../c-api/allocation.rst:56
msgid ""
"Note that this function is unsuitable if *typeobj* has "
":c:macro:`Py_TPFLAGS_HAVE_GC` set. For such objects, use "
":c:func:`PyObject_GC_NewVar` instead."
msgstr ""

#: ../../c-api/allocation.rst:63
msgid "Same as :c:func:`PyObject_Free`."
msgstr ""

#: ../../c-api/allocation.rst:67
msgid ""
"Object which is visible in Python as ``None``.  This should only be accessed"
" using the :c:macro:`Py_None` macro, which evaluates to a pointer to this "
"object."
msgstr ""
"Object yang terlihat di Python sebagai ``None``. Ini seharusnya hanya dapat "
"diakses menggunakan makro :c:macro:`Py_None`, yang mengevaluasi ke sebuah "
"pointer ke object ini."

#: ../../c-api/allocation.rst:74
msgid ":c:func:`PyModule_Create`"
msgstr ":c:func:`PyModule_Create`"

#: ../../c-api/allocation.rst:75
msgid "To allocate and create extension modules."
msgstr "Untuk mengalokasikan dan membuat modul ekstensi."
