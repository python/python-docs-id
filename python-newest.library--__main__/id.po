# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2019, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# oon arfiandwi <oon.arfiandwi@gmail.com>, 2018
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-09-01 14:24+0000\n"
"PO-Revision-Date: 2017-02-16 17:47+0000\n"
"Last-Translator: oon arfiandwi <oon.arfiandwi@gmail.com>, 2018\n"
"Language-Team: Indonesian (https://www.transifex.com/python-doc/teams/5390/id/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: id\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/__main__.rst:3
msgid ":mod:`__main__` --- Top-level script environment"
msgstr ":mod:`__main__` --- Lingkungan skrip tingkat atas"

#: ../../library/__main__.rst:10
msgid ""
"``'__main__'`` is the name of the scope in which top-level code executes. A "
"module's __name__ is set equal to ``'__main__'`` when read from standard "
"input, a script, or from an interactive prompt."
msgstr ""
"``'__main __'`` adalah nama ruang lingkup di mana kode tingkat atas "
"dijalankan. Sebuah modul __name__ ditetapkan setara dengan ``'__main __'`` "
"ketika dibaca dari standar input, skrip, atau dari prompt interaktif."

#: ../../library/__main__.rst:14
msgid ""
"A module can discover whether or not it is running in the main scope by "
"checking its own ``__name__``, which allows a common idiom for conditionally"
" executing code in a module when it is run as a script or with ``python -m``"
" but not when it is imported::"
msgstr ""
"Sebuah modul dapat mengetahui apakah ia berjalan di ruang utama dengan "
"memeriksa ``__name__`` miliknya sendiri, yang memungkinkan idiom umum untuk "
"mengeksekusi kode secara kondisional dalam sebuah modul ketika dijalankan "
"sebagai skrip atau dengan ``python -m`` tetapi tidak ketika diimpor::"

#: ../../library/__main__.rst:23
msgid ""
"For a package, the same effect can be achieved by including a "
"``__main__.py`` module, the contents of which will be executed when the "
"module is run with ``-m``."
msgstr ""
"Untuk sebuah paket, efek yang sama dapat dicapai dengan memasukkan modul "
"``__main __.py``, konten yang akan dijalankan saat modul dijalankan dengan "
"``-m``."
